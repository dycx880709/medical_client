<UserControl x:Class="MM.Medical.Client.Views.ExaminationPartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Ms.Controls;assembly=Ms.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:entities="clr-namespace:Mseiot.Medical.Service.Entities;assembly=Mseiot.Medical.Service"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MM.Medical.Client.Views"
             xmlns:core="clr-namespace:MM.Medical.Client.Core"
             mc:Ignorable="d"
             d:DesignHeight="1080" d:DesignWidth="1920">

    <UserControl.Resources>
        <DataTemplate x:Key="ExaminationMediaDataTemplate" DataType="{x:Type entities:ExaminationMedia}">
            <Grid Height="120" Width="160">
                <Grid x:Name="content">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Margin="2">
                        <Grid>
                            <Image x:Name="img" Source="{Binding Path, Converter={StaticResource PathToWebUrlConverter}}" Stretch="Fill"/>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Border Opacity="0.6" Background="{StaticResource Color_Content_Primary}" CornerRadius="100"/>
                                <controls:MediaButton x:Name="bt_play" FISize="{StaticResource LargeExFontSize}" NormalSource="{StaticResource Img_Visible}" HoverSource="{StaticResource Img_Visible_Hover}" 
                                                      Click="PlayMedia_Click" Margin="5"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="gd_tool" VerticalAlignment="Bottom">
                            <Border x:Name="cb_part" Visibility="Hidden" Opacity="0.6" Background="{StaticResource Color_Content_Primary}">
                                <ComboBox IsTabStop="False" BorderThickness="0" Height="25" Width="Auto" SelectedValue="{Binding BodyPart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          SelectionChanged="BodyPart_SelectionChanged" ItemsSource="{Binding BodyParts, RelativeSource={RelativeSource AncestorLevel=1,AncestorType={x:Type local:ExaminationPartView},Mode=FindAncestor}}"/>
                            </Border>
                            <TextBlock x:Name="tb_part" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource Color_Font_Light}" Margin="2,5,0,0" Text="{Binding BodyPart}"/>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1" Margin="0,2">
                        <CheckBox x:Name="cb" IsTabStop="False" VerticalAlignment="Top" Click="MediaPrint_Click" ToolTip="选中" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <controls:MediaButton x:Name="mb_export"  IsTabStop="False" Click="ExportMedia_Click" ToolTip="导出" NormalSource="{StaticResource Img_Save}" HoverSource="{StaticResource Img_Save_Hover}"
                                              Height="15" Width="15" VerticalAlignment="Center"/>
                        <controls:MediaButton x:Name="mb_remove"  IsTabStop="False" Click="RemoveMedia_Click" ToolTip="删除" NormalSource="{StaticResource Img_Delete}" HoverSource="{StaticResource Img_Delete_Hover}" 
                                              Height="15" Width="15" VerticalAlignment="Bottom"/>
                    </Grid>
                </Grid>
                <Grid x:Name="loading" Visibility="Hidden">
                    <Border Opacity="0.6" Background="Black"/>
                    <TextBlock x:Name="tb_msg" Text="图片上传中" FontSize="{StaticResource SmallFontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Color_Font_Light}"/>
                    <TextBlock x:Name="tb_err" TextWrapping="Wrap" FontSize="{StaticResource SmallFontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Color_Danger}"/>
                </Grid>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding VideoPath}" Value="{x:Null}"/>
                        <Condition Binding="{Binding MediaType}" Value="Video"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" TargetName="mb_export" Value="Hidden"/>
                        <Setter Property="Visibility" TargetName="mb_remove" Value="Hidden"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path}" Value="{x:Null}">
                    <Setter Property="Source" TargetName="img" Value="{Binding Buffer}"/>
                    <Setter Property="Visibility" TargetName="tb_msg" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="bt_play" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Error}" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="tb_err" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ExaminationMediaID}" Value="0">
                    <Setter Property="Visibility" TargetName="loading" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MediaType}" Value="{x:Static entities:MediaType.Video}">
                    <Setter Property="Visibility" TargetName="cb" Value="Collapsed"/>
                    <Setter Property="VerticalAlignment" TargetName="mb_export" Value="Top"/>
                    <Setter Property="NormalSource" TargetName="bt_play" Value="{StaticResource Img_Play}"/>
                    <Setter Property="HoverSource" TargetName="bt_play" Value="{StaticResource Img_Play_Hover}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Visibility" TargetName="cb_part" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="tb_part" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="330"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <WrapPanel VerticalAlignment="Center" Grid.ColumnSpan="3" HorizontalAlignment="Center">
                <WrapPanel.Resources>
                    <sys:Double x:Key="InputElementWidth">110</sys:Double>
                    <sys:Double x:Key="InputElementHeight">30</sys:Double>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource editorFormItemText}">
                        <Setter Property="Width" Value="80"/>
                        <Setter Property="Margin" Value="0,0,5,0"/>
                        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
                    </Style>
                    <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource editorFormItem}">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                    <!--<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>-->
                </WrapPanel.Resources>
                <StackPanel>
                    <TextBlock Text="姓名"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.Name}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="性别"/>
                    <ComboBox IsReadOnly="{Binding IsReadOnly}" ItemsSource="{x:Static core:Const.Sexs}" SelectedValue="{Binding SelectedExamination.Appointment.Sex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Title"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="年龄"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.Birthday}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="电话号码"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.Telephone}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="检查类型"/>
                    <ComboBox x:Name="cb_type" IsReadOnly="{Binding IsReadOnly}" SelectedValue="{Binding SelectedExamination.Appointment.AppointmentType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="麻醉方法"/>
                    <ComboBox x:Name="cb_anesthesia" IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.Anesthesia, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="患者来源"/>
                    <ComboBox x:Name="cb_source" IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.PatientSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem>门诊</ComboBoxItem>
                        <ComboBoxItem>住院</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource {x:Type StackPanel}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cb_source}" Value="1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="住院号"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.HospitalID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource {x:Type StackPanel}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cb_source}" Value="1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="科室"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.Department, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource {x:Type StackPanel}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cb_source}" Value="1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="床号"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Appointment.RoomID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="检查时间"/>
                    <TextBox IsReadOnly="True" BorderThickness="0">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Text" Value="--"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checked}">
                                        <Setter Property="Text" Value="{Binding SelectedExamination.ExaminationTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Reported}">
                                        <Setter Property="Text" Value="{Binding SelectedExamination.ReportTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=yyy/MM/dd}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource editorFormItem}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checked}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Reported}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="报告日期"/>
                    <TextBox IsReadOnly="True" Text="{Binding SelectedExamination.ReportTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=yyy/MM/dd}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="检查医生"/>
                    <TextBox IsReadOnly="True">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Text" Value="{Binding SelectedExamination.DoctorName}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedExamination.DoctorName}" Value="">
                                        <Setter Property="Text" Value="--"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="检查部位"/>
                    <ComboBox x:Name="cb_body" IsReadOnly="{Binding IsReadOnly}" DropDownOpened="BodyPart_DropDownOpened" Style="{StaticResource MultipleComboBoxStyle}" Text="{Binding SelectedExamination.BodyPart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <CheckBox Content="{Binding}" Click="SelectedBody_Click" Height="Auto" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                </Border>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="审核医生"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.AuditDoctor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="医生助理"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding SelectedExamination.Nurse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="内镜编号"/>
                    <TextBox IsReadOnly="True" Text="{Binding SelectedExamination.EndoscopeID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToFormatStringConverter}, ConverterParameter=6}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="检查结果"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Width="290" Text="{Binding SelectedExamination.Result, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="主诉"/>
                    <TextBox IsReadOnly="{Binding IsReadOnly}" Width="290" Text="{Binding SelectedExamination.PatientTalk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </WrapPanel>
            <ScrollViewer Grid.Row="1" Grid.Column="0">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Width" Value="310"/>
                        </Style>
                    </StackPanel.Resources>
                    <Expander Header="临床诊断" IsExpanded="True">
                        <TextBox MinHeight="100" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.ClinicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                    <Expander Header="内镜所见" IsExpanded="True">
                        <TextBox MinHeight="120" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.EndoscopicFindings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                    <Expander Header="镜下诊断" IsExpanded="True">
                        <TextBox MinHeight="100" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.MicroscopicDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                    <Expander Header="活检部位" IsExpanded="True">
                        <TextBox MinHeight="100" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.BiopsySite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                    <Expander Header="病理诊断" IsExpanded="True">
                        <TextBox MinHeight="100" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.PathologicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                    <Expander Header="医生建议" IsExpanded="True">
                        <TextBox MinHeight="100" AcceptsReturn="True" IsReadOnly="{Binding IsReadOnly}" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding SelectedExamination.DoctorAdvice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
            <TabControl Grid.Row="1" Grid.Column="1" Width="300" BorderBrush="{StaticResource Color_Border_Primary}" Margin="10">
                <TabControl.Style>
                    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabControl.Style>
                <TabItem x:Name="ti_word" Width="149" Style="{StaticResource CustomHeaderTabItemStyle}" Header="医学词库" IsSelected="True" Cursor="Hand">
                    <TreeView x:Name="tv_medicalWord" Focusable="False">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="True"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type entities:MedicalWord}" ItemsSource="{Binding MedicalWords}">
                                <StackPanel x:Name="sp" Orientation="Horizontal" Background="Transparent" MouseLeftButtonDown="MedicalWord_MouseLeftButtonDown">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </TabItem>
                <TabItem x:Name="ti_template" Width="149" Style="{StaticResource CustomHeaderTabItemStyle}" Header="诊断模板" Foreground="{StaticResource Color_Font_Primary}">
                    <TreeView x:Name="tv_template" Focusable="False">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="IsExpanded" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type entities:MedicalTemplate}" ItemsSource="{Binding MedicalTemplates}">
                                <StackPanel Orientation="Horizontal" Background="Transparent" MouseLeftButtonDown="MedicalTemplate_MouseLeftButtonDown">
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </TabItem>
            </TabControl>
            <Grid Margin="5" Background="White">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Grid.Row" Value="1"/>
                        <Setter Property="Grid.Column" Value="2"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFullScreen}" Value="True">
                                <Setter Property="Grid.Row" Value="0"/>
                                <Setter Property="Grid.RowSpan" Value="2"/>
                                <Setter Property="Grid.Column" Value="0"/>
                                <Setter Property="Grid.ColumnSpan" Value="3"/>
                                <Setter Property="Margin" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="400"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="600"/>
                </Grid.ColumnDefinitions>
                <controls:CustomGroupBox Margin="5">
                    <controls:CustomGroupBox.Style>
                        <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                            <Setter Property="Header" Value="预览画面"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                    <Setter Property="Header" Value="实时画面"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:CustomGroupBox.Style>
                    <controls:CustomGroupBox.AttachContent>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton IsChecked="{Binding IsFullScreen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                            <Setter Property="Content" Value="画面放大"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content" Value="画面还原" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Button Content="画面采图" Margin="5,0" Click="Shotcut_Click"/>
                                <ToggleButton VerticalAlignment="Center" Margin="5,0,0,0" Click="Record_Click">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                            <Setter Property="Content" Value="开始录像"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content" Value="停止录像" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </StackPanel>
                        </ControlTemplate>
                    </controls:CustomGroupBox.AttachContent>
                    <Grid>
                        <local:Video x:Name="video"/>
                        <Grid>
                            <Border x:Name="bd_media" Visibility="Hidden" Background="#10000000">
                                <Image x:Name="img_media"/>
                            </Border>
                            <Button x:Name="bt_close" Click="CloseMedia_Click" Visibility="Hidden" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,5,0" Style="{StaticResource Button_Close}"/>
                        </Grid>
                    </Grid>
                </controls:CustomGroupBox>
                <controls:CustomGroupBox Margin="5" Grid.Row="1">
                    <controls:CustomGroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="录像"/>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Text" Value="{Binding SelectedExamination.Videos.Count}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedExamination}" Value="{x:Null}">
                                                <Setter Property="Text" Value="0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedExamination.Videos}" Value="{x:Null}">
                                                <Setter Property="Text" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="段"/>
                        </StackPanel>
                    </controls:CustomGroupBox.Header>
                    <ListBox Style="{StaticResource WrappingListBoxStyle}" VerticalAlignment="Top"
                        SelectedValue="{Binding SelectedMedia, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        ItemsSource="{Binding SelectedExamination.Videos}" 
                        ItemTemplate="{StaticResource ExaminationMediaDataTemplate}"
                    >
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </controls:CustomGroupBox>
                <controls:CustomGroupBox Margin="5" Grid.Column="1" Grid.RowSpan="2">
                    <controls:CustomGroupBox.AttachContent>
                        <ControlTemplate>
                            <CheckBox Content="只显示已选" IsChecked="{Binding ShowSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="ShowSelect_Click"/>
                        </ControlTemplate>
                    </controls:CustomGroupBox.AttachContent>
                    <controls:CustomGroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="截图"/>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Text" Value="{Binding SelectedExamination.Images.Count}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedExamination}" Value="{x:Null}">
                                                <Setter Property="Text" Value="0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectedExamination.Images}" Value="{x:Null}">
                                                <Setter Property="Text" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="张"/>
                        </StackPanel>
                    </controls:CustomGroupBox.Header>
                    <ListBox Style="{StaticResource WrappingListBoxStyle}"
                        SelectedValue="{Binding SelectedMedia, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        ItemsSource="{Binding SelectedExamination.Images}" 
                        ItemTemplate="{StaticResource ExaminationMediaDataTemplate}"
                    />
                </controls:CustomGroupBox>
                <controls:CustomGroupBox x:Name="cgb_word" Visibility="Collapsed" Grid.Row="1" Margin="5,0" Header="特殊字符">
                    <controls:CustomGroupBox.AttachContent>
                        <ControlTemplate>
                            <Button Style="{StaticResource Button_Close}" Foreground="{StaticResource Color_Font_Primary}" Click="CloseWord_Click"/>
                        </ControlTemplate>
                    </controls:CustomGroupBox.AttachContent>
                    <controls:SoftKeyboard x:Name="sk" Margin="5,10"/>
                </controls:CustomGroupBox>
            </Grid>
        </Grid>
        <controls:Loading x:Name="cl" Grid.ColumnSpan="2"/>
    </Grid>
</UserControl>
