<UserControl x:Class="MM.Medical.Client.Views.ExaminationManageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MM.Medical.Client.Views"
             xmlns:controls="clr-namespace:Ms.Controls;assembly=Ms.Controls"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="1080" d:DesignWidth="1920">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <controls:CustomGroupBox Width="420" Grid.Column="0" Header="检查列表" Margin="0,0,5,0">
            <!--<controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEditable, ElementName=uc}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>-->
            <controls:CustomGroupBox.HeaderMenu>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="tb_check" Width="60" IsChecked="{Binding IsDoctorVisit, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="StartCheck_Click" VerticalAlignment="Center" Margin="5,0,0,0">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                <Setter Property="Content" Value="出诊"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="停诊"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button Content="过号" Width="60" Margin="5,0,0,0" Click="Skip_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Waiting">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="叫号" Width="60" Margin="5,0,0,0" Click="Call_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Waiting">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="刷新" Width="60" Margin="5,0,0,0" Visibility="Collapsed" Click="Refresh_Click"/>
                </StackPanel>
            </controls:CustomGroupBox.HeaderMenu>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="20,0,0,0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="今日患者"/>
                    <CheckBox x:Name="rb_waiting" Click="AppointmentStatus_CheckChanged" Content="候诊中" IsChecked="True" Margin="15,0"/>
                    <CheckBox x:Name="rb_checked" Click="AppointmentStatus_CheckChanged" Content="已检查" IsChecked="True"/>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="25,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="检查号" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Text="状态" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="2" Text="姓名" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="3" Text="性别" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ListBox x:Name="lb_appointments" Grid.Row="1" Style="{StaticResource DefaultListBoxStyle}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border BorderThickness="0,1" BorderBrush="{DynamicResource Color_Border_Secondary}" Margin="1">
                                                <Expander Margin="1">
                                                    <Expander.Header>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="60"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border Grid.Column="0">
                                                                <TextBlock Text="{Binding Number}" HorizontalAlignment="Center"/>
                                                            </Border>
                                                            <Border Grid.Column="1" Width="70" Height="28" CornerRadius="5" Background="{Binding AppointmentStatus, Converter={StaticResource AppointmentStatusToColorConverter}}">
                                                                <TextBlock VerticalAlignment="Center" FontSize="{StaticResource NormalFontSize}" HorizontalAlignment="Center" Foreground="{StaticResource Color_Font_Light}" Text="{Binding AppointmentStatus, Converter={StaticResource EnumToStringConverter}}"/>
                                                            </Border>
                                                            <Border Grid.Column="2">
                                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
                                                            </Border>
                                                            <Border Grid.Column="3">
                                                                <TextBlock Text="{Binding Sex, Converter={StaticResource SexConverter}}" HorizontalAlignment="Center"/>
                                                            </Border>
                                                        </Grid>
                                                    </Expander.Header>
                                                    <ListBox ItemsSource="{Binding Examinations}" SelectedValue="{Binding SelectedExamination, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                             SelectionChanged="Examination_SelectionChanged" Style="{StaticResource DefaultListBoxStyle}">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border Height="45">
                                                                    <Grid VerticalAlignment="Center">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock x:Name="tb_time" HorizontalAlignment="Center" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Text="{Binding ExaminationTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=yyyy-MM-dd HH:mm}"/>
                                                                        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Text="{Binding AppointmentType}"/>
                                                                    </Grid>
                                                                </Border>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding ExaminationState}" Value="None">
                                                                        <Setter Property="Text" TargetName="tb_time" Value="未检查"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ExaminationState}" Value="Running">
                                                                        <Setter Property="Text" TargetName="tb_time" Value="检查中"/>
                                                                    </DataTrigger>
                                                                </DataTemplate.Triggers>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                </Expander>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </Grid>
        </controls:CustomGroupBox>
        <controls:CustomGroupBox Grid.Column="1" Header="检查明细">
            <controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedExamination, ElementName=uc}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>
            <controls:CustomGroupBox.AttachContent>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <ToggleButton Click="Check_Click" IsChecked="{Binding IsEditable, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5,0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="开始检查"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="停止检查" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Waiting">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Checking">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="更换内镜" Click="InsteadEndoscope_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Margin" Value="5,0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Checking">
                                            <Setter Property="Margin" Value="5,0,0,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ToggleButton Margin="5,0" Click="Save_Click" IsChecked="{Binding IsEditable, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="编辑报告"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="保存报告" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Checked">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Reported">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="打印报告" Click="Print_Click" Margin="5,0,0,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Checked"/>
                                                <Condition Binding="{Binding IsEditable, ElementName=uc}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SelectedExamination.Appointment.AppointmentStatus, ElementName=uc}" Value="Reported"/>
                                                <Condition Binding="{Binding IsEditable, ElementName=uc}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </controls:CustomGroupBox.AttachContent>
            <local:ExaminationPartView x:Name="epv" IsExamination="True" IsReadOnly="{Binding IsEditable, ElementName=uc, Converter={StaticResource ReverseBooleanConverter}}"
                            SelectedExamination="{Binding SelectedExamination, ElementName=uc}" Loading="{Binding ElementName=loading}"/>
        </controls:CustomGroupBox>
        <controls:ChildWindow x:Name="child" Grid.ColumnSpan="2"/>
        <controls:Loading x:Name="loading" Grid.ColumnSpan="2"/>
    </Grid>
</UserControl>
