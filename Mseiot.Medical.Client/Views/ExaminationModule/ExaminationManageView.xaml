<UserControl x:Class="MM.Medical.Client.Views.ExaminationManageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MM.Medical.Client.Views"
             xmlns:entities="clr-namespace:Mseiot.Medical.Service.Entities;assembly=Mseiot.Medical.Service"
             xmlns:controls="clr-namespace:Ms.Controls;assembly=Ms.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="1080" d:DesignWidth="1920">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <controls:CustomGroupBox Width="350" Grid.Column="0" Header="检查列表" Margin="0,0,5,0">
            <controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecking, ElementName=uc}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>
            <controls:CustomGroupBox.AttachContent>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton x:Name="tb_check" Width="60" IsChecked="{Binding IsDoctorVisit, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="StartCheck_Click" VerticalAlignment="Center" Margin="5,0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="出诊"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="停诊"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="叫号" Width="60" Margin="5,0,0,0" Click="Call_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemsSource[0].AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Waiting}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="刷新" Width="60" Margin="5,0,0,0" Click="Refresh_Click" Visibility="Collapsed"/>
                        <Button Content="删除" Width="60" Margin="5,0,0,0" Click="Remove_Click" Visibility="Collapsed"/>
                    </StackPanel>
                </ControlTemplate>
            </controls:CustomGroupBox.AttachContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="20,0,0,0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="今日患者"/>
                    <RadioButton x:Name="rb_all" Click="AppointmentStatus_CheckChanged" Content="全部" IsChecked="True"/>
                    <RadioButton x:Name="rb_waiting" Click="AppointmentStatus_CheckChanged" Content="待检查" Margin="15,0"/>
                    <RadioButton x:Name="rb_checked" Click="AppointmentStatus_CheckChanged" Content="已检查"/>
                </StackPanel>
                <DataGrid x:Name="dg_appointments" Grid.Row="1" SelectionChanged="Appointments_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="70" Visibility="Collapsed" Header="序号" Binding="{Binding Number}"/>
                        <DataGridTemplateColumn Width="*" Header="状态">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Width="50" Height="30" CornerRadius="5" Background="{Binding AppointmentStatus, Converter={StaticResource AppointmentStatusToColorConverter}}">
                                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding AppointmentStatus, Converter={StaticResource EnumToStringConverter}}"/>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Width="*" Header="姓名" Binding="{Binding Name}"/>
                        <DataGridTextColumn Width="*" Header="性别" Binding="{Binding Sex, Converter={StaticResource SexConverter}}"/>
                        <DataGridTemplateColumn Width="*" Header="检查时间">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border>
                                        <TextBlock x:Name="tb" Text="--"/>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checked}">
                                            <Setter Property="Text" TargetName="tb" Value="{Binding AppointmentTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Reported}">
                                            <Setter Property="Text" TargetName="tb" Value="{Binding AppointmentTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <!--<controls:Pager x:Name="pager" Grid.Row="2"/>-->
            </Grid>
        </controls:CustomGroupBox>
        <controls:CustomGroupBox Grid.Column="1" Header="检查明细" DataContext="{Binding SelectedValue, ElementName=dg_appointments}">
            <controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedValue, ElementName=dg_appointments}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>
            <controls:CustomGroupBox.AttachContent>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <ToggleButton IsChecked="{Binding IsChecking, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Click="Check_Click" VerticalAlignment="Center" Margin="5,0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="开始检查"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="停止检查" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Waiting}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="采图配置" Click="CaptureSetting_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Margin" Value="5,0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                            <Setter Property="Margin" Value="5,0,0,0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ToggleButton Margin="5,0" Click="Save_Click" IsChecked="{Binding IsChecking, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="编辑报告"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="保存报告" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checked}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Reported}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="打印报告" Click="Print_Click" Margin="5,0,0,0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Waiting}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </controls:CustomGroupBox.AttachContent>
            <Grid Grid.Column="0">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecking, ElementName=uc}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="330"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <WrapPanel VerticalAlignment="Center" Grid.ColumnSpan="3" HorizontalAlignment="Center">
                    <WrapPanel.Resources>
                        <sys:Double x:Key="InputElementWidth">100</sys:Double>
                        <sys:Double x:Key="InputElementHeight">30</sys:Double>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource editorFormItemText}">
                            <Setter Property="Width" Value="50"/>
                            <Setter Property="Margin" Value="0,0,5,0"/>
                        </Style>
                        <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource editorFormItem}">
                            <Setter Property="Margin" Value="2"/>
                        </Style>
                    </WrapPanel.Resources>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="姓名" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True" Text="{Binding Name}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="性别" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True" Text="{Binding Sex, Converter={StaticResource SexConverter}}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="年龄" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True" Text="{Binding Birthday}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="检查时间" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Text" Value="--"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Checked}">
                                            <Setter Property="Text" Value="{Binding Examination.ExaminationTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="报告日期" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Text" Value="--"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppointmentStatus}" Value="{x:Static entities:AppointmentStatus.Reported}">
                                            <Setter Property="Text" Value="{Binding Examination.ReportTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="检查医生" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Text" Value="{Binding Examination.DoctorName}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Examination.DoctorName}" Value="">
                                            <Setter Property="Text" Value="--"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Examination.DoctorName}" Value="{x:Null}">
                                            <Setter Property="Text" Value="--"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="检查部位" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_body" Template="{StaticResource MultipleComboBoxTemplate}" Text="{Binding Examination.BodyPart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding}" Click="SelectedBody_Click" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="检查体位" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_bodyLoc" Text="{Binding Examination.BodyPose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="麻醉方法" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_anesthesia" Text="{Binding Examination.Anesthesia, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="检查结果" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_result" Text="{Binding Examination.Result, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="术前用药" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_preoperative" Text="{Binding Examination.Preoperative, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="插入途径" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_insert" Text="{Binding Examination.InsertType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="组织采取" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_org" Text="{Binding Examination.CollectOrg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="细胞采取" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_cell" Text="{Binding Examination.CollectCell, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="HIV" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_hiv" Text="{Binding Examination.HIV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="HCV" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_hcv" Text="{Binding Examination.HCV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="HBasg" Style="{StaticResource editorFormItemText}"/>
                        <ComboBox x:Name="cb_hbasg" Text="{Binding Examination.HBasg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Style="{StaticResource editorFormItem}">
                        <TextBlock Text="内镜编号" Style="{StaticResource editorFormItemText}"/>
                        <TextBox IsReadOnly="True" Text="{Binding Examination.EndoscopeID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </WrapPanel>
                <ScrollViewer Grid.Row="1" Grid.Column="0">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Width" Value="310"/>
                            </Style>
                        </StackPanel.Resources>
                        <Expander Header="临床诊断" IsExpanded="True">
                            <TextBox MinHeight="100" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.ClinicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                        <Expander Header="内镜所见" IsExpanded="True">
                            <TextBox MinHeight="120" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.EndoscopicFindings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                        <Expander Header="镜下诊断" IsExpanded="True">
                            <TextBox MinHeight="100" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.MicroscopicDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                        <Expander Header="活检部位" IsExpanded="True">
                            <TextBox MinHeight="100" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.BiopsySite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                        <Expander Header="病理诊断" IsExpanded="True">
                            <TextBox MinHeight="100" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.PathologicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                        <Expander Header="医生建议" IsExpanded="True">
                            <TextBox MinHeight="100" TextWrapping="Wrap" GotFocus="ExaminationText_GotFocus" Text="{Binding Examination.DoctorAdvice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
                <TabControl Grid.Row="1" Grid.Column="1" Margin="10" BorderBrush="{StaticResource Color_Border_Primary}">
                    <TabItem x:Name="ti_word" Header="医学词库" Width="125" IsSelected="True" Foreground="{StaticResource Color_Font_Primary}">
                        <TreeView x:Name="tv_medicalWord">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type entities:MedicalWord}" ItemsSource="{Binding MedicalWords}">
                                    <StackPanel x:Name="sp" Orientation="Horizontal" Background="Transparent" MouseLeftButtonDown="MedicalWord_MouseLeftButtonDown">
                                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </TabItem>
                    <TabItem x:Name="ti_template" Header="诊断模板" Width="125" Foreground="{StaticResource Color_Font_Primary}">
                        <TreeView x:Name="tv_template">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type entities:MedicalTemplate}" ItemsSource="{Binding MedicalTemplates}">
                                    <StackPanel Orientation="Horizontal" Background="Transparent" MouseLeftButtonDown="MedicalTemplate_MouseLeftButtonDown">
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </TabItem>
                </TabControl>
                <Grid Margin="5">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Grid.Row" Value="1"/>
                            <Setter Property="Grid.Column" Value="2"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFullScreen, ElementName=uc}" Value="True">
                                    <Setter Property="Grid.Row" Value="0"/>
                                    <Setter Property="Grid.RowSpan" Value="2"/>
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Setter Property="Grid.ColumnSpan" Value="3"/>
                                    <Setter Property="Margin" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="200"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>
                    <controls:CustomGroupBox Margin="5">
                        <controls:CustomGroupBox.Style>
                            <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                                <Setter Property="Header" Value="预览画面"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                        <Setter Property="Header" Value="实时画面"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:CustomGroupBox.Style>
                        <controls:CustomGroupBox.AttachContent>
                            <ControlTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton IsChecked="{Binding IsFullScreen, ElementName=uc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                                <Setter Property="Content" Value="画面放大"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="画面还原" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Button Content="画面采图" Margin="5,0" Click="Shotcut_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <ToggleButton VerticalAlignment="Center" Margin="5,0,0,0" Click="Record_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                                <Setter Property="Content" Value="开始录像"/>
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="停止录像" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding SelectedValue.AppointmentStatus, ElementName=dg_appointments}" Value="{x:Static entities:AppointmentStatus.Checking}">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </StackPanel>
                            </ControlTemplate>
                        </controls:CustomGroupBox.AttachContent>
                        <local:Video x:Name="video" ImageSource="/MM.Medical.Share;component/Images/nosignal.jpg"/>
                    </controls:CustomGroupBox>
                    <controls:CustomGroupBox Margin="5" Grid.Row="1" Header="录像 0段">
                        <ListBox ItemsSource="{Binding Examination.Videos}"/>
                    </controls:CustomGroupBox>
                    <controls:CustomGroupBox Margin="5" Grid.Column="1" Grid.RowSpan="2" Header="截图 0段">
                        <ListBox ItemsSource="{Binding Examination.Images}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="120">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox VerticalAlignment="Center" Margin="2" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Grid Grid.Column="1" Margin="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Image x:Name="img" Source="{Binding Path, Converter={StaticResource PathToWebUrlConverter}}" Stretch="Uniform"/>
                                                <ComboBox Grid.Row="1" IsTabStop="False" Height="25" Width="Auto" Margin="0,5,0,0" Text="{Binding ExaminationPart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBox Grid.Row="1" IsReadOnly="True" IsTabStop="False" Height="25" Width="Auto" Margin="0,5,0,0" Text="{Binding ExaminationPart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Grid>
                                        </Grid>
                                        <Grid x:Name="loading" Visibility="Hidden">
                                            <Border Opacity="0.6" Background="Black"/>
                                            <TextBlock x:Name="tb_msg" Text="图片上传中" FontSize="{StaticResource SmallFontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Color_Font_Light}"/>
                                            <TextBlock x:Name="tb_err" TextWrapping="Wrap" FontSize="{StaticResource SmallFontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Color_Danger}"/>
                                        </Grid>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path}" Value="{x:Null}">
                                            <Setter Property="Source" TargetName="img" Value="{Binding Buffer}"/>
                                            <Setter Property="Visibility" TargetName="tb_msg" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Error}" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="tb_err" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ExaminationMediaID}" Value="0">
                                            <Setter Property="Visibility" TargetName="loading" Value="Visible"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </controls:CustomGroupBox>
                </Grid>
            </Grid>
        </controls:CustomGroupBox>
        <controls:Loading x:Name="loading" Grid.ColumnSpan="2"/>
    </Grid>
</UserControl>
