<UserControl x:Class="Mseiot.Medical.Client.Views.InspectionManageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mseiot.Medical.Client.Views"
             xmlns:entities="clr-namespace:Mseiot.Medical.Service.Entities;assembly=Mseiot.Medical.Service"
             xmlns:controls="clr-namespace:Ms.Controls;assembly=Ms.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920">

    <UserControl.Resources>
        <sys:Double x:Key="InputElementWidth">120</sys:Double>
        <sys:Double x:Key="InputElementHeight">30</sys:Double>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <controls:CustomGroupBox Width="450" Grid.Column="0" Header="检查列表" Margin="0,0,5,0">
            <controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecking, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type local:InspectionManageView}, Mode=FindAncestor}}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>
            <controls:CustomGroupBox.AttachContent>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="刷新" Margin="5,0" Click="Refresh_Click"/>
                        <Button Content="删除" Margin="5,0,0,0" Click="Remove_Click"/>
                    </StackPanel>
                </ControlTemplate>
            </controls:CustomGroupBox.AttachContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="20,0,0,0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="今日患者"/>
                    <RadioButton x:Name="rb_all" Click="PatientStatus_CheckChanged" Content="全部" IsChecked="True"/>
                    <RadioButton x:Name="rb_waiting" Click="PatientStatus_CheckChanged" Content="待检查" Margin="15,0"/>
                    <RadioButton x:Name="rb_checked" Click="PatientStatus_CheckChanged" Content="已检查"/>
                </StackPanel>
                <DataGrid x:Name="dg_patients" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="70" Header="序号"/>
                        <DataGridTemplateColumn Width="*" Header="检查状态">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Width="80" Height="30" CornerRadius="5" Background="{Binding PatientStatus, Converter={StaticResource PatientStatusToColorConverter}}">
                                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource Color_Font_Light}"
                                                   Text="{Binding PatientStatus, Converter={StaticResource EnumToStringConverter}}"/>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Width="*" Header="姓名" Binding="{Binding Patient.Name}"/>
                        <DataGridTextColumn Width="*" Header="性别" Binding="{Binding Patient.Sex}"/>
                        <DataGridTemplateColumn Width="*" Header="检查时间">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border>
                                        <TextBlock x:Name="tb" Text="--" Foreground="{StaticResource Color_Font_Light}"/>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding PatientStatus}" Value="{x:Static entities:PatientStatus.Checked}">
                                            <Setter Property="Text" TargetName="tb" Value="{Binding CheckTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <controls:Pager Grid.Row="2"/>
            </Grid>
        </controls:CustomGroupBox>
        <controls:CustomGroupBox Grid.Column="1" Header="检查明细" DataContext="{Binding SelectedValue, ElementName=dg_patients}">
            <controls:CustomGroupBox.Style>
                <Style TargetType="{x:Type controls:CustomGroupBox}" BasedOn="{StaticResource {x:Type controls:CustomGroupBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedValue, ElementName=dg_patients}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomGroupBox.Style>
            <controls:CustomGroupBox.AttachContent>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <ToggleButton IsChecked="{Binding IsChecking, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type local:InspectionManageView}, Mode=FindAncestor}}"
                            Click="Check_Click" VerticalAlignment="Center" Margin="5,0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="Content" Value="开始检查"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="停止检查" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button Content="彩图配置" Margin="5,0"/>
                        <Button Content="打印报告" Click="Print_Click" Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </controls:CustomGroupBox.AttachContent>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="10">
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource {x:Type DatePicker}}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="175*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="姓名" Grid.Row="0" Grid.Column="0" Margin="0,5,5,5"/>
                    <TextBlock Text="性别" Grid.Row="0" Grid.Column="2" Margin="0,5,5,5"/>
                    <TextBlock Text="年龄" Grid.Row="0" Grid.Column="4" Margin="0,5,5,5"/>
                    <TextBlock Text="检查部位" Grid.Row="0" Grid.Column="6" Margin="0,5,5,5"/>
                    <TextBlock Text="检查体位" Grid.Row="0" Grid.Column="8" Margin="0,5,5,5"/>
                    <TextBlock Text="麻醉方法" Grid.Row="0" Grid.Column="10" Margin="0,5,5,5"/>
                    <TextBlock Text="检查日期" Grid.Row="2" Grid.Column="0" Margin="0,5,5,5"/>
                    <TextBlock Text="检查时间 " Grid.Row="2" Grid.Column="2" Margin="0,5,4,5"/>
                    <TextBlock Text="报告日期" Grid.Row="2" Grid.Column="4" Margin="0,5,5,5"/>
                    <TextBlock Text="检查医生" Grid.Row="2" Grid.Column="6" Margin="0,5,5,5"/>
                    <TextBlock Text="检查结果" Grid.Row="2" Grid.Column="8" Margin="0,5,5,5"/>
                    <TextBlock Text="术前用药" Grid.Row="2" Grid.Column="10" Margin="0,5,5,5"/>
                    <TextBlock Text="插入途径" Grid.Row="4" Grid.Column="0" Margin="0,5,5,5"/>
                    <TextBlock Text="组织采取 " Grid.Row="4" Grid.Column="2" Margin="0,5,4,5"/>
                    <TextBlock Text="细胞采取" Grid.Row="4" Grid.Column="4" Margin="0,5,5,5"/>
                    <TextBlock Text="HIV" Grid.Row="4" Grid.Column="6" Margin="0,5,4,5"/>
                    <TextBlock Text="HCV" Grid.Row="4" Grid.Column="8" Margin="0,5,5,5"/>
                    <TextBlock Text="HBasg" Grid.Row="4" Grid.Column="10" Margin="0,5,5,5"/>

                    <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="True" Text="{Binding Patient.Name}"/>
                    <TextBox Grid.Row="0" Grid.Column="3" IsReadOnly="True" Text="{Binding Patient.Sex}"/>
                    <TextBox Grid.Row="0" Grid.Column="5" IsReadOnly="True" Text="{Binding Patient.Age}"/>
                    <TextBox Grid.Row="0" Grid.Column="7" IsReadOnly="True" Text="{Binding CheckBody}"/>
                    <ComboBox x:Name="cb_bodyLoc" Grid.Row="0" Grid.Column="9" Text="{Binding CheckInfo.BodyLoc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_anesthesia" Grid.Row="0" Grid.Column="11" Text="{Binding CheckInfo.Anesthesia, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CheckTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=yyyy/MM/dd}" Width="{StaticResource InputElementWidth}" IsReadOnly="True"/>
                    <TextBox Grid.Row="2" Grid.Column="3" Width="{StaticResource InputElementWidth}" IsReadOnly="True">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Text" Value="--"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PatientStatus}" Value="{x:Static entities:PatientStatus.Checked}">
                                        <Setter Property="Text" Value="{Binding CheckTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBox Grid.Row="2" Grid.Column="5" Width="{StaticResource InputElementWidth}" IsReadOnly="True">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Text" Value="{Binding CheckInfo.ReportTime, Converter={StaticResource TimeStampToStringFormatConverter}, ConverterParameter=HH:mm:ss}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ReportTime}" Value="0">
                                        <Setter Property="Text" Value="--"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBox Grid.Row="2" Grid.Column="7" IsReadOnly="True" Text="{Binding DoctorName}"/>
                    <TextBox Grid.Row="2" Grid.Column="9" Text="{Binding CheckInfo.CheckResult}"/>
                    <ComboBox x:Name="cb_preoperative" Grid.Row="2" Grid.Column="11" Text="{Binding CheckInfo.Preoperative, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_insert" Grid.Row="4" Grid.Column="1" Text="{Binding CheckInfo.InsertType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_org" Grid.Row="4" Grid.Column="3" Text="{Binding CheckInfo.CollectOrg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_cell" Grid.Row="4" Grid.Column="5" Text="{Binding CheckInfo.CollectCell, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_hiv" Grid.Row="4" Grid.Column="7" Text="{Binding CheckInfo.HIV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_hcv" Grid.Row="4" Grid.Column="9" Text="{Binding CheckInfo.HCV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ComboBox x:Name="cb_hbasg" Grid.Row="4" Grid.Column="11" Text="{Binding CheckInfo.HBasg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{StaticResource Color_Border_Secondary}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Expander}">
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="450"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ScrollViewer Grid.Column="0">
                            <StackPanel Margin="10">
                                <Expander Header="临床诊断" IsExpanded="True">
                                    <TextBox MinHeight="100" TextWrapping="Wrap" Text="{Binding CheckInfo.ClinicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                                <Expander Header="内镜所见" IsExpanded="True">
                                    <TextBox MinHeight="120" TextWrapping="Wrap" Text="{Binding CheckInfo.EndoscopicFindings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                                <Expander Header="镜下诊断" IsExpanded="True">
                                    <TextBox MinHeight="100" TextWrapping="Wrap" Text="{Binding CheckInfo.MicroscopicDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                                <Expander Header="活检部位" IsExpanded="True">
                                    <TextBox MinHeight="100" TextWrapping="Wrap" Text="{Binding CheckInfo.BiopsySite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                                <Expander Header="病理诊断" IsExpanded="True">
                                    <TextBox MinHeight="100" TextWrapping="Wrap" Text="{Binding CheckInfo.PathologicalDiagnosis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                                <Expander Header="医生建议" IsExpanded="True">
                                    <TextBox MinHeight="100" TextWrapping="Wrap" Text="{Binding CheckInfo.DoctorAdvice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Expander>
                            </StackPanel>
                        </ScrollViewer>
                        <Grid Grid.Column="1">
                            <GroupBox Header="图片及录像" Margin="5"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </controls:CustomGroupBox>
        <controls:Loading x:Name="loading" Grid.ColumnSpan="2"/>
    </Grid>
</UserControl>
